from django.urls import path

from rest_framework import viewsets
from rest_framework import serializers
from django_filters import rest_framework as filters

from ..models import {{camel_case_app_name}}
from ..serializers.{{app_name}} import {{camel_case_app_name}}Serializer


class {{camel_case_app_name}}Filter(filters.FilterSet):
    id = filters.NumberFilter(field_name='id')
    title = filters.CharFilter(field_name='title')

    class Meta:
        model = {{camel_case_app_name}}
        fields = ['id']

    def filter_title(self, queryset, name, value):
        return queryset.filter(title=value)


class {{camel_case_app_name}}FilterSerializer(serializers.Serializer):
    id = serializers.IntegerField(required=False)
    title = serializers.CharField(required=False)


class {{camel_case_app_name}}Serializer(serializers.ModelSerializer):
    id = serializers.IntegerField(required=False, read_only=True)
    title = serializers.CharField(label='标题', required=True)
    intro = serializers.CharField(label='简介', required=False)
    created_at = serializers.DateTimeField(label='创建时间', required=False, read_only=True)
    updated_at = serializers.DateTimeField(label='更新时间', required=False, read_only=True)

    class Meta:
        model = {{camel_case_app_name}}
        fields = [
            'id',
            'title',
            'intro',
            'created_at',
            'updated_at',
        ]


class {{camel_case_app_name}}ViewSet(viewsets.ModelViewSet):

    queryset = {{camel_case_app_name}}.objects.all()
    serializer_class = {{camel_case_app_name}}Serializer

    # for swagger tag
    tags = ['{{camel_case_app_name}}']

    @swagger_auto_schema(
        tags=tags
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def retrieve(self, request, pk=None, **kwargs):
        return super().retrieve(request, pk=None, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def destroy(self, request, pk=None, **kwargs):
        return super().destroy(request, pk=None, **kwargs)


{{app_name}}_list = {{camel_case_app_name}}ViewSet.as_view({'get': 'list', 'post': 'create'})
{{app_name}}_detail = {{camel_case_app_name}}ViewSet.as_view({'get': 'retrieve', 'post': 'update', 'delete': 'destroy'})


{{app_name}}_urls = [
    path('{{app_name}}/{{app_name}}', {{app_name}}_list),
    path('{{app_name}}/{{app_name}}/<int:pk>', {{app_name}}_detail),
]
